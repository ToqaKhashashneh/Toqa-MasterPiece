@model Nestify.Models.Property

@{
    ViewData["Title"] = "Property Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <span>Property Details</span>
        <a href="@Url.Action("Properties", "Admin")" class="btn btn-sm btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Properties
        </a>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-8">
                <h3>@Model.PropertyName</h3>
                <p class="text-muted">@Model.PropertyType</p>

                <div class="mb-4">
                    <h5>Description</h5>
                    <p>@Model.Description</p>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <h5>Property Details</h5>
                            <table class="table table-bordered">
                                <tr>
                                    <th>Price</th>
                                    <td>@Model.Price.ToString("C0", new System.Globalization.CultureInfo("en-JO"))</td>
                                </tr>
                                <tr>
                                    <th>Status</th>
                                    <td>
                                        <span class="badge bg-@(Model.PropertyStatus == "For Sale" ? "primary" :
                                                            Model.PropertyStatus == "For Rent" ? "info" :
                                                            Model.PropertyStatus == "Sold" ? "success" :
                                                            Model.PropertyStatus == "Rented" ? "warning" : "secondary")">
                                            @Model.PropertyStatus
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Price Type</th>
                                    <td>@Model.PriceType</td>
                                </tr>
                                <tr>
                                    <th>Featured</th>
                                    <td>
                                        @if (Model.IsFeatured.HasValue && Model.IsFeatured.Value)
                                        {
                                            <span class="badge bg-success">Yes</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">No</span>
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <th>Publish Date</th>
                                    <td>@Model.PublishDate?.ToString("MM/dd/yyyy")</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <h5>Property Features</h5>
                            <table class="table table-bordered">
                                <tr>
                                    <th>Size</th>
                                    <td>@Model.Size mÂ²</td>
                                </tr>
                                <tr>
                                    <th>Bedrooms</th>
                                    <td>@Model.Bedrooms</td>
                                </tr>
                                <tr>
                                    <th>Bathrooms</th>
                                    <td>@Model.Bathrooms</td>
                                </tr>
                                <tr>
                                    <th>Facing</th>
                                    <td>@Model.FacingDirection</td>
                                </tr>
                                <tr>
                                    <th>Location</th>
                                    <td>
                                        @if (Model.SubLocation != null && Model.SubLocation.Location != null)
                                        {
                                            @($"{Model.SubLocation.SublocationName}, {Model.SubLocation.Location.LocationName}")
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <h5>Special Features</h5>
                    @if (Model.PropertyFeatures != null && Model.PropertyFeatures.Any())
                    {
                        <div class="row">
                            @foreach (var feature in Model.PropertyFeatures)
                            {
                                <div class="col-md-4 mb-2">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6>@feature.FeatureName</h6>
                                            @if (!string.IsNullOrEmpty(feature.Size))
                                            {
                                                <p class="mb-0">Size: @feature.Size</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p>No special features available.</p>
                    }
                </div>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Property Images</h5>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl1))
                        {
                            <img src="@Model.ImageUrl1" class="img-fluid mb-3 rounded" alt="Property Image 1">
                        }
                        @if (!string.IsNullOrEmpty(Model.ImageUrl2))
                        {
                            <img src="@Model.ImageUrl2" class="img-fluid mb-3 rounded" alt="Property Image 2">
                        }
                        @if (!string.IsNullOrEmpty(Model.ImageUrl3))
                        {
                            <img src="@Model.ImageUrl3" class="img-fluid mb-3 rounded" alt="Property Image 3">
                        }
                        @if (!string.IsNullOrEmpty(Model.ImageUrl4))
                        {
                            <img src="@Model.ImageUrl4" class="img-fluid mb-3 rounded" alt="Property Image 4">
                        }
                        @if (!string.IsNullOrEmpty(Model.ImageUrl5))
                        {
                            <img src="@Model.ImageUrl5" class="img-fluid mb-3 rounded" alt="Property Image 5">
                        }
                        @if (string.IsNullOrEmpty(Model.ImageUrl1) &&
                        string.IsNullOrEmpty(Model.ImageUrl2) &&
                        string.IsNullOrEmpty(Model.ImageUrl3) &&
                        string.IsNullOrEmpty(Model.ImageUrl4) &&
                        string.IsNullOrEmpty(Model.ImageUrl5))
                        {
                            <p>No images available.</p>
                        }
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Owner Information</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.User != null)
                        {
                            <h6>
                                @(string.IsNullOrEmpty(Model.User.BusinessName) ?
                                    (string.IsNullOrEmpty(Model.User.FirstName) && string.IsNullOrEmpty(Model.User.LastName) ?
                                    Model.User.Email : $"{Model.User.FirstName} {Model.User.LastName}") :
                                    Model.User.BusinessName)
                            </h6>
                            <p>Email: @Model.User.Email</p>
                            @if (!string.IsNullOrEmpty(Model.User.PhoneNumber))
                            {
                                <p>Phone: @Model.User.PhoneNumber</p>
                            }
                            @if (Model.User.Role == "Business")
                            {
                                <p>
                                    Business Verification:
                                    @if (Model.User.IsVerifiedBusiness)
                                    {
                                        <span class="badge bg-success">Verified</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Unverified</span>
                                    }
                                </p>
                            }
                        }
                        else
                        {
                            <p>Owner information not available.</p>
                        }
                    </div>
                </div>

                <div class="d-grid gap-2">


                    <form asp-action="ToggleFeatured" asp-controller="Admin" method="post" class="feature-form" style="display:inline;">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" name="isFeatured" value="@(Model.IsFeatured.HasValue && Model.IsFeatured.Value ? "false" : "true")" />
                        <button type="button"
                                class="btn btn-primary @(Model.IsFeatured.HasValue && Model.IsFeatured.Value ? "btn-secondary" : "btn-success") confirm-feature-btn">
                            <i class="bi bi-star@(Model.IsFeatured.HasValue && Model.IsFeatured.Value ? "-fill" : "")"></i>
                            @(Model.IsFeatured.HasValue && Model.IsFeatured.Value ? "Unfeature" : "Feature")
                        </button>
                    </form>


                    <form asp-action="DeleteProperty" asp-controller="Admin" method="post" class="delete-form" style="display:inline;">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="button" class="btn btn-danger confirm-delete-btn">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Success/Error popup after redirect
        @if (TempData["SweetSuccess"] != null)
        {
            <text>
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: '@TempData["SweetSuccess"]'
                        });
            </text>
        }

        @if (TempData["SweetError"] != null)
        {
            <text>
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops!',
                            text: '@TempData["SweetError"]'
                        });
            </text>
        }

        // SweetAlert confirmation before submit
        document.querySelectorAll('.confirm-feature-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                const form = button.closest('form');
                const actionText = button.textContent.trim();

                Swal.fire({
                    title: `Are you sure you want to ${actionText.toLowerCase()} this property?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, do it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });


             // Delete SweetAlert confirmation
        document.querySelectorAll('.confirm-delete-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                const form = button.closest('form');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });


    </script>
}
